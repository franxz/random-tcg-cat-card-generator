{"version":3,"sources":["components/Button.js","components/Card.js","components/Form.js","App.js","index.js"],"names":["Button","text","color","disabled","handleClick","style","backgroundColor","onClick","Card","props","data","name","hp","power","level","imgWidth","imgHeight","showName","imgLoading","nameLoading","levelIcons","i","push","className","hideLoadingStyle","opacity","transition","src","alt","onLoad","handleLoad","onError","handleError","Form","htmlFor","value","onChange","handleChange","id","type","checked","App","statMin","statMax","maxLvl","state","showForm","genCard","bind","handleGenClick","handleFormClick","this","fetchName","fetchImg","genRandomStat","setState","calcLvl","Math","round","random","floor","fetch","then","res","json","results","first","event","target","intValue","parseInt","isNaN","clampedValue","min","max","lvl","prevState","genBtnProps","formBtnProps","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4cb966cd.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Button({ text, color, disabled, handleClick }) {\n  return (\n    <button\n      style={{ backgroundColor: color }}\n      disabled={disabled}\n      onClick={handleClick}\n    >\n      {text}\n    </button>\n  )\n}\n\nexport default Button","import React from 'react'\n\nimport { FaHeart, FaDotCircle } from 'react-icons/fa'\nimport { GiClawSlashes } from 'react-icons/gi'\n\nfunction Card(props) {\n  const {\n    name, hp, power, level,\n    imgWidth, imgHeight,\n    color, showName,\n    imgLoading, nameLoading\n  } = props.data\n\n  const levelIcons = []\n  for (let i = 0; i < level; i++) {\n    levelIcons.push(<FaDotCircle key={i} className='catLevelIcon' />)\n  }\n\n  // if loading then hide\n  const hideLoadingStyle = imgLoading || nameLoading\n    ? { opacity: 0 }\n    : {transition: 'opacity 0.25s ease-in'}\n\n  return (\n    <div className={`card cardBg${color}`}>\n      {showName &&\n        <div className='cardHeader'>\n          { levelIcons }\n          <h2 className='catName' style={hideLoadingStyle}>{name}</h2>\n        </div>\n      }\n      \n      <img\n        src={`http://placekitten.com/${imgWidth}/${imgHeight}`}\n        alt='Random cat'\n        className='catImage'\n        style={hideLoadingStyle}\n        onLoad={props.handleLoad}\n        onError={props.handleError}\n      />\n\n      <div className='cardBottom' >\n        <div className='catPowerContainer'>\n          <FaHeart className='bottomIcon' />\n          <span className='catPower'>{hp}</span>\n        </div>\n        \n        <div className='catPowerContainer'>\n          <GiClawSlashes className='bottomIcon' />\n          <span className='catPower'>{power}</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card","import React from 'react'\n\nfunction Form(props) {\n  const { name, hp, power, color, showName } = props.data\n\n  return (\n    <div className='formContainer'>\n      <h3>Customize card</h3>\n\n      <form>\n        {showName &&\n          <>\n            <label htmlFor='name'>Name</label>\n            <input name='name' value={name} onChange={props.handleChange} id='name' />\n            <br />\n          </>\n        }\n\n        <label htmlFor='hp'>Life</label>\n        <input type='number' name='hp' value={hp} onChange={props.handleChange} id='hp' />\n        <br />\n\n        <label htmlFor='power'>Damage</label>\n        <input type='number' name='power' value={power} onChange={props.handleChange} id='power' />\n        <br />\n\n        <label htmlFor='color'>Color</label>\n        <select name='color' value={color} onChange={props.handleChange} id='color'>\n          <option value=\"1\">Orange</option>\n          <option value=\"2\">Blue</option>\n          <option value=\"3\">Green</option>\n        </select>\n        <br />\n\n        <label htmlFor='showName'>Show name?</label>\n        <input type='checkbox' name='showName' checked={showName} onChange={props.handleChange} id='showName' />\n      </form>\n    </div>\n  )\n}\n\nexport default Form","import React from 'react'\nimport Button from './components/Button'\n\nimport Card from './components/Card'\nimport Form from './components/Form'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n\n    this.statMin = 1\n    this.statMax = 999\n    this.maxLvl = 4\n\n    this.state = {\n      name: '',\n      hp: 0,\n      power: 0,\n      level: 0,\n      imgWidth: 250,\n      imgHeight: 0,\n      color: 0,\n      showName: true,\n      showForm: false,\n      nameLoading: true,\n      imgLoading: true,\n    }\n\n    this.genCard = this.genCard.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleLoad = this.handleLoad.bind(this)\n    this.handleError = this.handleError.bind(this)\n    this.handleGenClick = this.handleGenClick.bind(this)\n    this.handleFormClick = this.handleFormClick.bind(this)\n  }\n\n  componentDidMount() {\n    this.genCard()\n  }\n\n  /**\n   * CARD GENERATION\n   */\n  genCard() {\n    this.fetchName()\n    this.fetchImg()\n\n    const hp = this.genRandomStat()\n    const power = this.genRandomStat()\n\n    this.setState({\n      hp: hp,\n      power: power,\n      level: this.calcLvl(hp, power),\n      color: Math.round(Math.random() * 2) + 1,\n    })\n  }\n\n  genRandomStat() {\n    // 50 <= stat <= 950 && stat % 50 === 0\n    return Math.round(Math.random() * 8) * 100 + 100 + (Math.random() > 0.5 ? 50 : 0 )\n  }\n\n  calcLvl(hp, power) {\n    return Math.floor((hp + power) / (this.statMax * 2 / (this.maxLvl - 1))) + 1\n  }\n\n\n  /**\n   * DATA FETCHING\n   */\n  fetchName() {\n    this.setState({ nameLoading: true })\n\n    fetch('https://randomuser.me/api/')\n      .then(res => res.json())\n      .then(data => this.setState({\n        name: data.results[0].name.first,\n        nameLoading: false,\n      }))\n  }\n\n  fetchImg() {\n    // debido a la manera en que trabaja esta API, realmente no hago un fetch()\n    this.setState({ imgLoading: true })\n    \n    let imgHeight\n    do {\n      imgHeight = Math.round(Math.random() * 30) + 250\n    } while (imgHeight === this.state.imgHeight)\n    \n    this.setState({ imgHeight: imgHeight })\n  }\n\n\n  /**\n   * EVENT HANDLING\n   */\n    \n  /* form events */\n  handleChange(event) {\n    const { name, type, value, checked } = event.target\n\n    // checkbox?\n    if (type === 'checkbox') {\n      this.setState({ [name]: checked })\n    }\n    // stat?\n    else if (name === 'hp' || name === 'power') {\n      const intValue = parseInt(value)\n      if (!isNaN(intValue)) {\n        const clampedValue = Math.min(Math.max(intValue, this.statMin), this.statMax) // min <= value <= max\n        \n        const lvl = name === 'hp'\n          ? this.calcLvl(clampedValue, this.state.power)\n          : this.calcLvl(this.state.hp, clampedValue)\n        \n        this.setState({ [name]: clampedValue, level: lvl })\n      } else {\n        this.setState({ [name]: '' })\n      }\n    }\n    // other\n    else {\n      this.setState({ [name]: value })\n    }\n  }\n\n  /* card img events */\n  handleLoad() {\n    this.setState({ imgLoading: false }) \n  }\n\n  handleError() {\n    this.fetchImg()\n  }\n\n  /* buttons events */\n  handleGenClick() {\n    this.genCard()\n  }\n\n  handleFormClick() {\n    this.setState(prevState => {\n      return { showForm: !prevState.showForm }\n    })\n  }\n\n  \n  render() {\n    const genBtnProps = {\n      text: 'Generate',\n      color: '#98ddca',\n      disabled: this.state.imgLoading || this.state.nameLoading,\n      handleClick: this.handleGenClick,\n    }\n    const formBtnProps = {\n      text: this.state.showForm ? 'Close menu' : 'Customize',\n      color: this.state.showForm ? '#ffaaa7' : '#ffd3b4',\n      disabled: false,\n      handleClick: this.handleFormClick,\n    }\n\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>&#62; Random TCG Cat Card Generator &#60;</h1>\n        </header>\n        \n        <Card data={this.state} handleLoad={this.handleLoad} handleError={this.handleError} />\n\n        <div className='btnContainer'>\n          <Button {...genBtnProps} />\n          <Button {...formBtnProps} />\n        </div>\n\n        {this.state.showForm && <Form data={this.state} handleChange={this.handleChange} />}\n\n        <footer>\n          <p>\n            <span>This app works thanks to 2 APIs. So if something is broken, it may not be my fault :P </span>\n            <a href='https://github.com/franxz/random-tcg-cat-card-generator'>More info here</a>\n          </p>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}